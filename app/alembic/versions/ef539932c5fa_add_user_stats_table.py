"""add user_stats table

Revision ID: ef539932c5fa
Revises: 21db3f972662
Create Date: 2025-05-31 02:21:27.986982

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ef539932c5fa'
down_revision: Union[str, None] = '21db3f972662'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('UserStats',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('totalSolved', sa.Integer(), nullable=False),
    sa.Column('acceptanceRate', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['UserMetadata.userId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('userId')
    )
    op.drop_table('SubmissionMetadata')
    op.alter_column('UserMetadata', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('UserMetadata', 'password')
    op.add_column('UserSubmissionStats', sa.Column('problemsSolved', sa.Integer(), server_default='0', nullable=True))
    op.add_column('UserSubmissionStats', sa.Column('rank', sa.Integer(), server_default='0', nullable=True))
    op.add_column('UserSubmissionStats', sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True))
    op.drop_constraint(op.f('UserSubmissionStats_problemId_fkey'), 'UserSubmissionStats', type_='foreignkey')
    op.drop_column('UserSubmissionStats', 'problemId')
    op.drop_column('UserSubmissionStats', 'solvedStatus')
    op.drop_column('UserSubmissionStats', 'score')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('UserSubmissionStats', sa.Column('score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('UserSubmissionStats', sa.Column('solvedStatus', postgresql.ENUM('UNATTEMPTED', 'ATTEMPTED', 'SOLVED', name='solved_status'), autoincrement=False, nullable=True))
    op.add_column('UserSubmissionStats', sa.Column('problemId', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key(op.f('UserSubmissionStats_problemId_fkey'), 'UserSubmissionStats', 'ProblemMetadata', ['problemId'], ['problemId'])
    op.drop_column('UserSubmissionStats', 'created_at')
    op.drop_column('UserSubmissionStats', 'rank')
    op.drop_column('UserSubmissionStats', 'problemsSolved')
    op.add_column('UserMetadata', sa.Column('password', sa.VARCHAR(length=60), autoincrement=False, nullable=True))
    op.alter_column('UserMetadata', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_table('SubmissionMetadata',
    sa.Column('submissionId', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('problemId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('userId', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('language', postgresql.ENUM('JAVA', 'PYTHON', 'C', 'CPP', name='language'), autoincrement=False, nullable=True),
    sa.Column('state', postgresql.ENUM('RECEIVED', 'PROCESSING', 'COMPLETED', name='submissionstate'), autoincrement=False, nullable=True),
    sa.Column('statusCode', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('testsPassed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('totalTests', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('executionTime', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('memory', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('submissionId', name=op.f('SubmissionMetadata_pkey'))
    )
    op.drop_table('UserStats')
    # ### end Alembic commands ###
