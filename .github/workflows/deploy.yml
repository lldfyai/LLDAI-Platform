name: Deploy to AWS

on:
  push:
    branches:
      - code_dockerisation_for_deployment
permissions:
      id-token: write
      contents: read

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: lldfy/lldfysubmissionmanager
  ECS_CLUSTER: lldfyai_cluster1
  ECS_SERVICE: lldfyManager
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-${{ github.run_id }}

      - name: Login to AWS ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: |
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          push: true

      - name: Update Task Definition
        run: |
          NEW_TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition ${{ env.ECS_SERVICE }} --region ${{ env.AWS_REGION }} | \
            jq --arg IMAGE "${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ github.sha }}" \
            '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)')
          
          aws ecs register-task-definition \
            --family ${{ env.ECS_SERVICE }} \
            --cli-input-json "$NEW_TASK_DEFINITION" \
            --region ${{ env.AWS_REGION }}

      - name: Deploy to ECS
        run: |
          aws ecs update-service \
          --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --task-definition ${{ env.ECS_SERVICE }} \
          --force-new-deployment \
          --region ${{ env.AWS_REGION }}
          EOF
          )

          aws ecs register-task-definition \
            --family ${{ env.ECS_SERVICE }} \
            --container-definitions "$CONTAINER_DEFINITION" \
            --volumes '[{"name": "docker-sock", "host": {"sourcePath": "/var/run/docker.sock"}}]' \
            --network-mode bridge \
            --requires-compatibilities EC2 \
            --region ${{ env.AWS_REGION }}